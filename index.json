{
  "api/pbuddy.CodeGenerationUtility.EditModeTests.CodeGenerationHelperTests.html": {
    "href": "api/pbuddy.CodeGenerationUtility.EditModeTests.CodeGenerationHelperTests.html",
    "title": "Class CodeGenerationHelperTests | Code Generation Utility documentation",
    "keywords": "Class CodeGenerationHelperTests Inheritance Object CodeGenerationHelperTests Namespace : pbuddy.CodeGenerationUtility.EditModeTests Assembly : cs.temp.dll.dll Syntax public class CodeGenerationHelperTests : TestsAsDocumentationBase Methods CreateDocumentation() Declaration public override void CreateDocumentation() GetLinesArrayTest() Declaration public void GetLinesArrayTest() GetSectionExcludingGuardsTest() Declaration public void GetSectionExcludingGuardsTest() GetSectionIncludingGuardsTest() Declaration public void GetSectionIncludingGuardsTest()"
  },
  "api/pbuddy.CodeGenerationUtility.EditModeTests.html": {
    "href": "api/pbuddy.CodeGenerationUtility.EditModeTests.html",
    "title": "Namespace pbuddy.CodeGenerationUtility.EditModeTests | Code Generation Utility documentation",
    "keywords": "Namespace pbuddy.CodeGenerationUtility.EditModeTests Classes CodeGenerationHelperTests"
  },
  "api/pbuddy.CodeGenerationUtility.EditorScripts.CodeGenerationHelper.html": {
    "href": "api/pbuddy.CodeGenerationUtility.EditorScripts.CodeGenerationHelper.html",
    "title": "Class CodeGenerationHelper | Code Generation Utility documentation",
    "keywords": "Class CodeGenerationHelper Inheritance Object CodeGenerationHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : pbuddy.CodeGenerationUtility.EditorScripts Assembly : cs.temp.dll.dll Syntax public static class CodeGenerationHelper Methods AddToBeginningOfSection(List<String>, in SectionIdentifiers, String[]) Declaration public static void AddToBeginningOfSection(this List<string> lines, in SectionIdentifiers sectionIdentifiers, params string[] toAdd) Parameters Type Name Description List < String > lines SectionIdentifiers sectionIdentifiers String [] toAdd AddToEndOfSection(List<String>, in SectionIdentifiers, String[]) Declaration public static void AddToEndOfSection(this List<string> lines, in SectionIdentifiers sectionIdentifiers, params string[] toAdd) Parameters Type Name Description List < String > lines SectionIdentifiers sectionIdentifiers String [] toAdd GetLeadingWhitespace(String) Declaration public static string GetLeadingWhitespace(string str) Parameters Type Name Description String str Returns Type Description String GetLinesArrayFromTemplate(String) Declaration public static string[] GetLinesArrayFromTemplate(string template) Parameters Type Name Description String template Returns Type Description String [] GetSection(List<String>, in SectionIdentifiers, Boolean) Declaration public static List<string> GetSection(this List<string> lines, in SectionIdentifiers sectionIdentifiers, bool excludeSectionGuards = true) Parameters Type Name Description List < String > lines SectionIdentifiers sectionIdentifiers Boolean excludeSectionGuards Returns Type Description List < String > Examples Generated By TextAsDocumentationUtility -- Do NOT Modify this tag <!-- Can not find reference ../../EditModeTests/CodeGenerationHelper.cs --> RemoveMultipleEmptyLines(List<String>) Declaration public static void RemoveMultipleEmptyLines(this List<string> lines) Parameters Type Name Description List < String > lines RemoveSection(List<String>, in SectionIdentifiers) Declaration public static void RemoveSection(this List<string> lines, in SectionIdentifiers sectionIdentifiers) Parameters Type Name Description List < String > lines SectionIdentifiers sectionIdentifiers RemoveSectionIdentifiers(List<String>, in SectionIdentifiers) Declaration public static void RemoveSectionIdentifiers(this List<string> lines, in SectionIdentifiers sectionIdentifiers) Parameters Type Name Description List < String > lines SectionIdentifiers sectionIdentifiers ReplaceSectionIdentifiers(List<String>, in SectionIdentifiers, String) Declaration public static void ReplaceSectionIdentifiers(this List<string> lines, in SectionIdentifiers sectionIdentifiers, string replacementString) Parameters Type Name Description List < String > lines SectionIdentifiers sectionIdentifiers String replacementString ReplaceTemplates(List<String>, TemplateToReplace[]) Declaration public static void ReplaceTemplates(this List<string> lines, params TemplateToReplace[] replacements) Parameters Type Name Description List < String > lines TemplateToReplace [] replacements"
  },
  "api/pbuddy.CodeGenerationUtility.EditorScripts.html": {
    "href": "api/pbuddy.CodeGenerationUtility.EditorScripts.html",
    "title": "Namespace pbuddy.CodeGenerationUtility.EditorScripts | Code Generation Utility documentation",
    "keywords": "Namespace pbuddy.CodeGenerationUtility.EditorScripts Classes CodeGenerationHelper Structs SectionIdentifiers Text describing the 'guards' around a given section of text (either in a template or generated code file) TemplateToReplace ... describe ... In contrast to SectionIdentifiers , this structure represents text that should be 'swapped out' when generating code."
  },
  "api/pbuddy.CodeGenerationUtility.EditorScripts.SectionIdentifiers.html": {
    "href": "api/pbuddy.CodeGenerationUtility.EditorScripts.SectionIdentifiers.html",
    "title": "Struct SectionIdentifiers | Code Generation Utility documentation",
    "keywords": "Struct SectionIdentifiers Text describing the 'guards' around a given section of text (either in a template or generated code file) Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : pbuddy.CodeGenerationUtility.EditorScripts Assembly : cs.temp.dll.dll Syntax public readonly struct SectionIdentifiers Constructors SectionIdentifiers(String, String) Declaration public SectionIdentifiers(string sectionOpen, string sectionClose) Parameters Type Name Description String sectionOpen String sectionClose Properties SectionClose Tag / text that signals the close of the section Declaration public readonly string SectionClose { get; } Property Value Type Description String SectionOpen Tag / text that signals the beginning of the section Declaration public readonly string SectionOpen { get; } Property Value Type Description String Methods ToString() Declaration public override readonly string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/pbuddy.CodeGenerationUtility.EditorScripts.TemplateToReplace.html": {
    "href": "api/pbuddy.CodeGenerationUtility.EditorScripts.TemplateToReplace.html",
    "title": "Struct TemplateToReplace | Code Generation Utility documentation",
    "keywords": "Struct TemplateToReplace ... describe ... In contrast to SectionIdentifiers , this structure represents text that should be 'swapped out' when generating code. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : pbuddy.CodeGenerationUtility.EditorScripts Assembly : cs.temp.dll.dll Syntax public readonly struct TemplateToReplace Constructors TemplateToReplace(String, String) Declaration public TemplateToReplace(string templateString, string replacementString) Parameters Type Name Description String templateString String replacementString Properties ReplacementString The string of text that will replace the TemplateString Declaration public readonly string ReplacementString { get; } Property Value Type Description String TemplateString A string of text in a template that is intended to be replaced dynamically (using the ReplacementString ) Declaration public readonly string TemplateString { get; } Property Value Type Description String"
  },
  "index.html": {
    "href": "index.html",
    "title": "CodeGenerationUtility | Code Generation Utility documentation",
    "keywords": "CodeGenerationUtility Documentation I hope this library is as easy to use (and extend) as possible. In service of that, I've documented the code as much as possible. It is my belief that the best documentation is close to the code , if not code itself. Therefore, the documentation for this library takes two forms: XML documentation comments These are then used to Tests Installation I recommended using git submodules to install this library into your Unity project. That way you can: Easily get the latest updates to this package Easily install this as a dependency if your Unity project is tracked by git () Leverage version control locally on any changes you make to this library Potentially contribute your changes to improve this library (see Contributing ) To do this, complete the following: ... ... ... NOTE: If you plan to make significant changes to this library (whether you are a solo developer or work on a team), I'd still recommend using git submodules , but you should first fork this repository. Getting Started Contributing Dependencies None ( //woo )"
  }
}